-- MySQL Script generated by MySQL Workbench
-- 11/23/16 12:37:03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema movieplanet
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema movieplanet
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `movieplanet` DEFAULT CHARACTER SET utf8 ;
USE `movieplanet` ;

-- -----------------------------------------------------
-- Table `movieplanet`.`Rating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Rating` (
  `ratingID` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NULL,
  PRIMARY KEY (`ratingID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Movie` (
  `movieID` INT NOT NULL AUTO_INCREMENT,
  `ratingID` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `score` VARCHAR(45) NULL,
  `year` INT NULL,
  `screenTime` INT NULL,
  PRIMARY KEY (`movieID`),
  INDEX `fk_Movie_Rating1_idx` (`ratingID` ASC),
  CONSTRAINT `fk_Movie_Rating1`
    FOREIGN KEY (`ratingID`)
    REFERENCES `movieplanet`.`Rating` (`ratingID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Actor` (
  `actorID` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `dob` DATE NULL,
  `country` VARCHAR(45) NULL,
  PRIMARY KEY (`actorID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`User` (
  `userID` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  PRIMARY KEY (`userID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Producer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Producer` (
  `producerID` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `dob` DATE NULL,
  `country` VARCHAR(45) NULL,
  PRIMARY KEY (`producerID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Director`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Director` (
  `directorID` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `dob` DATE NULL,
  `country` VARCHAR(45) NULL,
  PRIMARY KEY (`directorID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Awards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Awards` (
  `awardsID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`awardsID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Genre` (
  `genreID` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`genreID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Writer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Writer` (
  `writerID` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `dob` DATE NULL,
  `country` VARCHAR(45) NULL,
  PRIMARY KEY (`writerID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Actor_has_Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Actor_has_Movie` (
  `Actor_actorID` INT NOT NULL,
  `Movie_movieID` INT NOT NULL,
  PRIMARY KEY (`Actor_actorID`, `Movie_movieID`),
  INDEX `fk_Actor_has_Movie_Movie1_idx` (`Movie_movieID` ASC),
  INDEX `fk_Actor_has_Movie_Actor1_idx` (`Actor_actorID` ASC),
  CONSTRAINT `fk_Actor_has_Movie_Actor1`
    FOREIGN KEY (`Actor_actorID`)
    REFERENCES `movieplanet`.`Actor` (`actorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Actor_has_Movie_Movie1`
    FOREIGN KEY (`Movie_movieID`)
    REFERENCES `movieplanet`.`Movie` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Movie_has_Awards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Movie_has_Awards` (
  `Movie_movieID` INT NOT NULL,
  `Awards_awardsID` INT NOT NULL,
  PRIMARY KEY (`Movie_movieID`, `Awards_awardsID`),
  INDEX `fk_Movie_has_Awards_Awards1_idx` (`Awards_awardsID` ASC),
  INDEX `fk_Movie_has_Awards_Movie1_idx` (`Movie_movieID` ASC),
  CONSTRAINT `fk_Movie_has_Awards_Movie1`
    FOREIGN KEY (`Movie_movieID`)
    REFERENCES `movieplanet`.`Movie` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_has_Awards_Awards1`
    FOREIGN KEY (`Awards_awardsID`)
    REFERENCES `movieplanet`.`Awards` (`awardsID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Director_has_Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Director_has_Movie` (
  `Director_directorID` INT NOT NULL,
  `Movie_movieID` INT NOT NULL,
  PRIMARY KEY (`Director_directorID`, `Movie_movieID`),
  INDEX `fk_Director_has_Movie_Movie1_idx` (`Movie_movieID` ASC),
  INDEX `fk_Director_has_Movie_Director1_idx` (`Director_directorID` ASC),
  CONSTRAINT `fk_Director_has_Movie_Director1`
    FOREIGN KEY (`Director_directorID`)
    REFERENCES `movieplanet`.`Director` (`directorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Director_has_Movie_Movie1`
    FOREIGN KEY (`Movie_movieID`)
    REFERENCES `movieplanet`.`Movie` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Movie_has_Writer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Movie_has_Writer` (
  `Movie_movieID` INT NOT NULL,
  `Writer_writerID` INT NOT NULL,
  PRIMARY KEY (`Movie_movieID`, `Writer_writerID`),
  INDEX `fk_Movie_has_Writer_Writer1_idx` (`Writer_writerID` ASC),
  INDEX `fk_Movie_has_Writer_Movie1_idx` (`Movie_movieID` ASC),
  CONSTRAINT `fk_Movie_has_Writer_Movie1`
    FOREIGN KEY (`Movie_movieID`)
    REFERENCES `movieplanet`.`Movie` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_has_Writer_Writer1`
    FOREIGN KEY (`Writer_writerID`)
    REFERENCES `movieplanet`.`Writer` (`writerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Movie_has_Producer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Movie_has_Producer` (
  `Movie_movieID` INT NOT NULL,
  `Producer_producerID` INT NOT NULL,
  PRIMARY KEY (`Movie_movieID`, `Producer_producerID`),
  INDEX `fk_Movie_has_Producer_Producer1_idx` (`Producer_producerID` ASC),
  INDEX `fk_Movie_has_Producer_Movie1_idx` (`Movie_movieID` ASC),
  CONSTRAINT `fk_Movie_has_Producer_Movie1`
    FOREIGN KEY (`Movie_movieID`)
    REFERENCES `movieplanet`.`Movie` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_has_Producer_Producer1`
    FOREIGN KEY (`Producer_producerID`)
    REFERENCES `movieplanet`.`Producer` (`producerID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`Movie_has_Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`Movie_has_Genre` (
  `Movie_movieID` INT NOT NULL,
  `Genre_genreID` INT NOT NULL,
  PRIMARY KEY (`Movie_movieID`, `Genre_genreID`),
  INDEX `fk_Movie_has_Genre_Genre1_idx` (`Genre_genreID` ASC),
  INDEX `fk_Movie_has_Genre_Movie1_idx` (`Movie_movieID` ASC),
  CONSTRAINT `fk_Movie_has_Genre_Movie1`
    FOREIGN KEY (`Movie_movieID`)
    REFERENCES `movieplanet`.`Movie` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movie_has_Genre_Genre1`
    FOREIGN KEY (`Genre_genreID`)
    REFERENCES `movieplanet`.`Genre` (`genreID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movieplanet`.`User_has_Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movieplanet`.`User_has_Movie` (
  `User_userID` INT NOT NULL,
  `Movie_movieID` INT NOT NULL,
  PRIMARY KEY (`User_userID`, `Movie_movieID`),
  INDEX `fk_User_has_Movie_Movie1_idx` (`Movie_movieID` ASC),
  INDEX `fk_User_has_Movie_User1_idx` (`User_userID` ASC),
  CONSTRAINT `fk_User_has_Movie_User1`
    FOREIGN KEY (`User_userID`)
    REFERENCES `movieplanet`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Movie_Movie1`
    FOREIGN KEY (`Movie_movieID`)
    REFERENCES `movieplanet`.`Movie` (`movieID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
